{"version":3,"sources":["tomoto-icon.svg","header/header.jsx","control-panel/control-panel.jsx","clock/clock.jsx","start-button/start-button.jsx","task/task-pop-up/task-pop-up.jsx","task/add-task-panel/add-task-panel.jsx","task/add-task-form/add-task-form.jsx","task/new-task-tag/new-task-tag.jsx","task/task-tags/task-tags.jsx","task/task.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","icon","ControlPanel","action","setAction","countDownActive","switchToPomodoro","switchToShort","switchToLong","onClick","Clock","formatTime","StartButton","setCountDownActive","style","color","position","boxShadow","top","TaskPopUp","AddTaskPanel","setAddTaskPanel","AddTaskForm","handleAddTask","inputRef","useRef","scheduleRef","onSubmit","e","preventDefault","task","title","current","value","completed","schedule","target","reset","type","placeholder","ref","NewTaskTags","handleDelete","TaskTags","tagList","map","Task","showTaskPopup","toggleTaskPopup","addTaskPanel","useState","setTagList","afterDelete","filter","tag","updatedtagList","push","library","add","fas","far","faFileAlt","faCog","faUserCircle","faEllipsisV","faPlusCircle","faLock","faStepForward","faTrashAlt","faCheck","faSave","faPlus","faCheckCircle","App","timer","setTimer","description","setDescription","setShowTaskPopup","useEffect","timeoutTag","setTimeout","clearTimeout","backgroundColor","confirmAlert","message","buttons","label","getSeconds","getMinutes","Math","floor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72f48a14.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tomoto-icon.043c7a7e.svg\";","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport logo from \"../tomoto-icon.svg\";\n\nimport \"./header.css\";\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <div className=\"logo-container\">\n        <img className=\"logo\" src={logo} alt=\"logo\" />\n        <h2 className=\"header-title\">Pomodoro</h2>\n      </div>\n      <div className=\"option-container\">\n        <nav>\n          <FontAwesomeIcon className=\"header-icon\" icon=\"file-alt\" />\n          Report\n        </nav>\n        <nav>\n          <FontAwesomeIcon className=\"header-icon\" icon=\"cog\" />\n          Setting\n        </nav>\n        <nav>\n          <FontAwesomeIcon className=\"header-icon\" icon=\"user-circle\" />\n          Login\n        </nav>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nimport \"./control-panel.css\";\n\nconst ControlPanel = ({\n  action,\n  setAction,\n  countDownActive,\n  switchToPomodoro,\n  switchToShort,\n  switchToLong,\n}) => {\n  return (\n    <div className=\"control-panel\">\n      <span\n        className={`${action === \"pomodoro\" ? \"toggle-bg-color\" : \"\"}`}\n        onClick={() => {\n          countDownActive ? switchToPomodoro() : setAction(\"pomodoro\");\n        }}\n      >\n        Pomodoro\n      </span>\n      <span\n        className={`${action === \"short\" ? \"toggle-bg-color\" : \"\"}`}\n        onClick={() => {\n          countDownActive ? switchToShort() : setAction(\"short\");\n        }}\n      >\n        Short Break\n      </span>\n      <span\n        className={`${action === \"long\" ? \"toggle-bg-color\" : \"\"}`}\n        onClick={() => {\n          countDownActive ? switchToLong() : setAction(\"long\");\n        }}\n      >\n        Long Break\n      </span>\n    </div>\n  );\n};\n\nexport default ControlPanel;\n","import React from \"react\";\n\nimport \"./clock.css\";\n\nconst Clock = ({ formatTime }) => {\n  return <div className=\"timer\">{formatTime()}</div>;\n};\n\nexport default Clock;\n","import React from \"react\";\n\nimport \"./start-button.css\";\n\nconst StartButton = ({ action, countDownActive, setCountDownActive }) => {\n  return (\n    <div className=\"start-button-container\">\n      {!countDownActive ? (\n        <button\n          className=\"start-button\"\n          onClick={() => setCountDownActive(true)}\n          style={{\n            color:\n              action === \"short\"\n                ? \"rgb(70, 142, 145)\"\n                : action === \"long\"\n                ? \"rgb(67, 126, 168)\"\n                : \"\",\n          }}\n        >\n          START\n        </button>\n      ) : (\n        <button\n          className=\"start-button\"\n          onClick={() => setCountDownActive(false)}\n          style={{\n            color:\n              action === \"short\"\n                ? \"rgb(70, 142, 145)\"\n                : action === \"long\"\n                ? \"rgb(67, 126, 168)\"\n                : \"\",\n            position: \"relative\",\n            boxShadow: \"none\",\n            top: \"6px\",\n          }}\n        >\n          STOP\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default StartButton;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./task-pop-up.css\";\n\nconst TaskPopUp = () => {\n  return (\n    <div className=\"task-pop-up\">\n      <div className=\"task-pop-up-options\">\n        <FontAwesomeIcon className=\"task-pop-up-icon\" icon=\"trash-alt\" />\n        <p>Clear finished tasks</p>\n      </div>\n      <div className=\"task-pop-up-options\">\n        <FontAwesomeIcon className=\"task-pop-up-icon\" icon=\"check\" />\n        <p>Clear act pomodoros</p>\n      </div>\n      <div className=\"task-pop-up-options\">\n        <FontAwesomeIcon className=\"task-pop-up-icon\" icon=\"save\" />\n        <p>Save as template</p>\n      </div>\n      <div className=\"task-pop-up-options\">\n        <FontAwesomeIcon className=\"task-pop-up-icon\" icon=\"plus\" />\n        <p>Add from templates</p>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskPopUp;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./add-task-panel.css\";\n\nconst AddTaskPanel = ({ setAddTaskPanel }) => {\n  return (\n    <div className=\"add-task-panel\" onClick={() => setAddTaskPanel(false)}>\n      <FontAwesomeIcon icon=\"plus-circle\" />\n      <h4>Add Task</h4>\n    </div>\n  );\n};\n\nexport default AddTaskPanel;\n","import React, { useRef } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./add-task-form.css\";\n\nconst AddTaskForm = ({ setAddTaskPanel, handleAddTask }) => {\n  const inputRef = useRef(null);\n  const scheduleRef = useRef(null);\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    const task = {\n      title: inputRef.current.value,\n      completed: 0,\n      schedule: scheduleRef.current.value,\n    };\n    handleAddTask(task);\n    e.target.reset();\n  };\n  return (\n    <form className=\"add-task-form-container\" onSubmit={handleOnSubmit}>\n      <div className=\"add-task-form\">\n        <input\n          className=\"add-task-form-input\"\n          type=\"text\"\n          placeholder=\"what are you working on?\"\n          ref={inputRef}\n        />\n        <h4>Est Pomodoros</h4>\n        <div className=\"add-task-form-option-buttons\">\n          <input type=\"number\" ref={scheduleRef} />\n        </div>\n        <div className=\"add-note-add-project-panel\">\n          <button>+Add Note</button>\n          <button>+Add Project</button>\n          <FontAwesomeIcon icon=\"lock\" />\n        </div>\n      </div>\n      <div className=\"cancel-save-container\">\n        <button\n          type=\"button\"\n          className=\"cancel-btn\"\n          onClick={() => setAddTaskPanel(true)}\n        >\n          Cancel\n        </button>\n        <button type=\"submit\" className=\"save-btn\">\n          Save\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default AddTaskForm;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./new-task-tag.css\";\n\nconst NewTaskTags = ({ title, completed, schedule, handleDelete }) => {\n  return (\n    <div className=\"new-task-tag\">\n      <FontAwesomeIcon className=\"check-circle\" icon=\"check-circle\" />\n      <h4 className=\"new-task-title\">{title}</h4>\n      <h4 className=\"new-task-number\">\n        {completed}/{schedule}\n      </h4>\n      <FontAwesomeIcon\n        icon=\"trash-alt\"\n        className=\"trash-icon\"\n        onClick={() => handleDelete(title)}\n      />\n    </div>\n  );\n};\n\nexport default NewTaskTags;\n","import React from \"react\";\nimport NewTaskTags from \"../new-task-tag/new-task-tag\";\n\nimport \"./task-tags.css\";\n\nconst TaskTags = ({ tagList, handleDelete }) => {\n  return (\n    <div className=\"task-tags\">\n      {tagList.map(({ title, completed, schedule }) => {\n        return (\n          <NewTaskTags\n            key={title + 1}\n            title={title}\n            completed={completed}\n            schedule={schedule}\n            handleDelete={handleDelete}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default TaskTags;\n","import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport TaskPopUp from \"./task-pop-up/task-pop-up\";\nimport AddTaskPanel from \"./add-task-panel/add-task-panel\";\nimport AddTaskForm from \"./add-task-form/add-task-form\";\nimport TaskTags from \"./task-tags/task-tags\";\n\nimport \"./task.css\";\n\nconst Task = ({\n  showTaskPopup,\n  toggleTaskPopup,\n  addTaskPanel,\n  setAddTaskPanel,\n}) => {\n  const [tagList, setTagList] = useState([]);\n\n  const handleAddTask = (task) => {\n    const updatedtagList = [...tagList];\n    updatedtagList.push(task);\n\n    setTagList(updatedtagList);\n  };\n\n  const handleDelete = (title) => {\n    let afterDelete = tagList.filter((tag) => {\n      return tag.title !== title;\n    });\n    setTagList(afterDelete);\n  };\n\n  return (\n    <div className=\"task-container\">\n      <div className=\"task-header-container\">\n        <h3 className=\"task-header\">Tasks</h3>\n        <FontAwesomeIcon\n          className=\"task-icon\"\n          icon=\"ellipsis-v\"\n          onClick={() => toggleTaskPopup()}\n        />\n        {showTaskPopup ? <TaskPopUp /> : null}\n      </div>\n      <TaskTags tagList={tagList} handleDelete={handleDelete} />\n      {addTaskPanel ? (\n        <AddTaskPanel setAddTaskPanel={setAddTaskPanel} />\n      ) : (\n        <AddTaskForm\n          handleAddTask={handleAddTask}\n          setAddTaskPanel={setAddTaskPanel}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Task;\n","import React, { useState, useEffect } from \"react\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport { far } from \"@fortawesome/free-regular-svg-icons\";\nimport { faFileAlt } from \"@fortawesome/free-regular-svg-icons\";\nimport {\n  faCog,\n  faUserCircle,\n  faEllipsisV,\n  faPlusCircle,\n  faLock,\n  faStepForward,\n  faTrashAlt,\n  faCheck,\n  faPlus,\n  faSave,\n  faCheckCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport Header from \"./header/header\";\nimport ControlPanel from \"./control-panel/control-panel\";\nimport Clock from \"./clock/clock\";\nimport StartButton from \"./start-button/start-button\";\nimport Task from \"./task/task\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  const [action, setAction] = useState(\"pomodoro\");\n  const [timer, setTimer] = useState(1500);\n  const [description, setDescription] = useState(\"Time to work!\");\n  const [countDownActive, setCountDownActive] = useState(false);\n  const [showTaskPopup, setShowTaskPopup] = useState(false);\n  const [addTaskPanel, setAddTaskPanel] = useState(true);\n\n  useEffect(() => {\n    if (action === \"pomodoro\") {\n      setTimer(1500);\n      setCountDownActive(false);\n      setDescription(\"Time to work!\");\n    }\n    if (action === \"short\") {\n      setTimer(300);\n      setCountDownActive(false);\n      setDescription(\"Time for a break!\");\n    }\n    if (action === \"long\") {\n      setTimer(900);\n      setCountDownActive(false);\n      setDescription(\"Time for a break!\");\n    }\n  }, [action]);\n\n  useEffect(() => {\n    let timeoutTag;\n    if (countDownActive && timer > 0) {\n      timeoutTag = setTimeout(() => {\n        setTimer((timer) => timer - 1);\n      }, 1000);\n    }\n    return () => clearTimeout(timeoutTag);\n  }, [countDownActive, timer]);\n\n  const formatTime = () => {\n    let getSeconds = `${timer % 60}`;\n    let getMinutes = `${Math.floor(timer / 60)}`;\n\n    if (getSeconds <= 9) {\n      getSeconds = `0${timer % 60}`;\n    }\n    if (getMinutes <= 9) {\n      getMinutes = `0${Math.floor(timer / 60)}`;\n    }\n\n    return `${getMinutes}:${getSeconds}`;\n  };\n\n  const toggleTaskPopup = () => {\n    setShowTaskPopup(!showTaskPopup);\n  };\n\n  const switchToPomodoro = () => {\n    confirmAlert({\n      title: \"Confirm to submit\",\n      message: \"The timer is still running, are you sure you want to switch?\",\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: () => setAction(\"pomodoro\"),\n        },\n        {\n          label: \"No\",\n        },\n      ],\n    });\n  };\n  const switchToShort = () => {\n    confirmAlert({\n      title: \"Confirm to submit\",\n      message: \"The timer is still running, are you sure you want to switch?\",\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: () => setAction(\"short\"),\n        },\n        {\n          label: \"No\",\n        },\n      ],\n    });\n  };\n  const switchToLong = () => {\n    confirmAlert({\n      title: \"Confirm to submit\",\n      message: \"The timer is still running, are you sure you want to switch?\",\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: () => setAction(\"long\"),\n        },\n        {\n          label: \"No\",\n        },\n      ],\n    });\n  };\n  return (\n    <div>\n      <div\n        style={{\n          backgroundColor:\n            action === \"short\"\n              ? \"rgb(70, 142, 145)\"\n              : action === \"long\"\n              ? \"rgb(67, 126, 168)\"\n              : \"\",\n        }}\n        className=\"homepage-container\"\n      >\n        <Header />\n        <div>\n          <div className=\"timer-container\">\n            <ControlPanel\n              action={action}\n              setAction={setAction}\n              countDownActive={countDownActive}\n              switchToPomodoro={switchToPomodoro}\n              switchToShort={switchToShort}\n              switchToLong={switchToLong}\n            />\n            <Clock formatTime={formatTime} />\n            <StartButton\n              action={action}\n              countDownActive={countDownActive}\n              setCountDownActive={setCountDownActive}\n            />\n          </div>\n          <div className=\"description-container\">\n            <h3>{description}</h3>\n          </div>\n          <Task\n            showTaskPopup={showTaskPopup}\n            toggleTaskPopup={toggleTaskPopup}\n            addTaskPanel={addTaskPanel}\n            setAddTaskPanel={setAddTaskPanel}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nlibrary.add(\n  fas,\n  far,\n  faFileAlt,\n  faCog,\n  faUserCircle,\n  faEllipsisV,\n  faPlusCircle,\n  faLock,\n  faStepForward,\n  faTrashAlt,\n  faCheck,\n  faSave,\n  faPlus,\n  faCheckCircle\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}